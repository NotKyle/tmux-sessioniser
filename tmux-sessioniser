#!/usr/bin/env bash

switch_to() {
    if [[ -z $TMUX ]]; then
        tmux attach-session -t $1
    else
        tmux switch-client -t $1
    fi
}

has_session() {
    tmux list-sessions | grep -q "^$1:"
}

hydrate() {
    if [ -f $2/.tmux-sessionizer ]; then
        tmux send-keys -t $1 "source $2/.tmux-sessionizer" c-M
    elif [ -f $HOME/.tmux-sessionizer ]; then
        tmux send-keys -t $1 "source $HOME/.tmux-sessionizer" c-M
    fi
}

if [[ $# -eq 1 ]]; then
    selected=$1
else
    # Extensible selection with fzf
    selected=$(find  ~/Desktop/Sites/ ~/Desktop/Projects/ ~/.config/nvim/  -mindepth 1 -maxdepth 1 -type d | fzf)
fi

if [[ -z $selected ]]; then
    exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

create_panes() {
    local session=$1
    tmux rename-window -t "$session:0" "Main"
    tmux send-keys -t "$session:0" "vim" c-M
    tmux split-window -v -t "$session:0"
    tmux send-keys -t "$session:0.1" "docker ps" c-M
    tmux rename-pane -t "$session:0.1" "Docker"
    tmux split-window -h -t "$session:0.1"
    tmux send-keys -t "$session:0.2" "zsh" c-M
    tmux rename-pane -t "$session:0.2" "Shell"
    tmux select-pane -t "$session:0.0"
}

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -d -s $selected_name -c $selected
    create_panes $selected_name
    hydrate $selected_name $selected
    tmux attach-session -t $selected_name
    exit 0
fi

if ! has_session $selected_name; then
    tmux new-session -d -s $selected_name -c $selected
    create_panes $selected_name
    hydrate $selected_name $selected
fi

switch_to $selected_name

