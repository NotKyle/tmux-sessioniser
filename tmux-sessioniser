#!/usr/bin/env bash

switch_to() {
    if [[ -z $TMUX ]]; then
        tmux attach-session -t $1
    else
        tmux switch-client -t $1
    fi
}

has_session() {
    tmux list-sessions | grep -q "^$1:"
}

hydrate() {
    if [ -f $2/.tmux-sessionizer ]; then
        tmux send-keys -t $1 "source $2/.tmux-sessionizer" C-m
    elif [ -f $HOME/.tmux-sessionizer ]; then
        tmux send-keys -t $1 "source $HOME/.tmux-sessionizer" C-m
    fi
}

if [[ $# -eq 1 ]]; then
    selected=$1
else
    selected=$(find  ~/Desktop/Sites/ ~/Desktop/Projects/ ~/.config/nvim/  -mindepth 1 -maxdepth 1 -type d | fzf)
fi

if [[ -z $selected ]]; then
    exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

create_windows() {
    local session=$1
    tmux rename-window -t "$session:1" "Vim"        # Rename the first window to "Vim"
    tmux send-keys -t "$session:1" "vim" C-m        # Send "vim" command to the first window

    tmux new-window -t "$session" -n "Docker"       # Create a new window named "Docker"
    tmux send-keys -t "$session:2" "docker ps" C-m  # Send "docker ps" command to the second window

    tmux new-window -t "$session" -n "Shell"        # Create a new window named "Shell"
    tmux send-keys -t "$session:3" "zsh" C-m        # Send "zsh" command to the third window

    tmux select-window -t "$session:1"              # Select the first window (Vim) by default
}

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -d -s $selected_name -c $selected
    create_windows $selected_name
    hydrate $selected_name $selected
    tmux attach-session -t $selected_name
    exit 0
fi

if ! has_session $selected_name; then
    tmux new-session -d -s $selected_name -c $selected
    create_windows $selected_name
    hydrate $selected_name $selected
fi

switch_to $selected_name

